from aiogram import Bot,Dispatcher, F,types,Router
import asyncio
from aiogram.filters import CommandStart, Command
from aiogram.types import Message
import config
from datetime import datetime
import code
import json
import random
from app.func.stack_test import Player,Chat,Filter_type, Filter_admin


fun_router = Router()

@fun_router.message(Command('profile'))
async def profile(message:Message):
    
    if message.reply_to_message != None:
        user = message.reply_to_message.from_user
    else:
        user = message.from_user
    a = Player(user.id, user.full_name)
    check = a.check()
    try:
        money = check["money"]
        rep = check["rep"]
        await message.reply(f"""–ü—Ä–æ—Ñ—ñ–ª—å <a href="tg://user?id={user.id}">{user.full_name}</a>
–ì—Ä–æ—à–µ–π : {money:,}
–†–µ–ø—É—Ç–∞—Ü—ñ—è: {rep} \n –í –≤—Å–µ—Å–≤—ñ—Ç—ñ –∫–∞–≤—É–Ω—è–∫–∏:{(datetime.now() - datetime.strptime(check['date_first'], "%d %m %Y")).days} –î–Ω—ñ–≤
                            """, parse_mode='HTML')
    except Exception as a:
        print(a)

@fun_router.message(Command('pay'))
async def pay(message:Message):
    print(len(list(message.text)), list(message.text))
    if len(message.text.split()) == 2:
        text = message.text.split()
        money_pay = int(text[1])
        if money_pay <= 0:
            await message.reply('–¶–µ –≤—Å–µ? –ù–µ –≤–∏—Ç—Ä–∞—á–∞–π –º—ñ–π —á–∞—Å, –≥–∞–Ω–¥–æ–Ω')
            return
        try:
            a = Player(message.from_user.id, message.from_user.full_name)
            b = Player(message.reply_to_message.from_user.id, message.reply_to_message.from_user.full_name)
            a_status = a.check()
            if a_status['money'] >= money_pay :
                a.minus(money_pay)
                b.plus(money_pay)
                await message.reply("–£—Å–ø—ñ—à–Ω–æ")
            else:
                await message.reply_animation('CgACAgIAAxkBAAICuGesk9DsFcsEXkTcOMYvXkMR75QjAAKdcAACxnwoSINS985tgdYCNgQ', caption='–£ –≤–∞—Å –Ω–µ–º–∞—î —Å—Ç—ñ–ª—å–∫–∏ –≥—Ä–æ—à–µ–π')
        except Exception as e:
                await message.reply(f'–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫:{e}')
    else:
        await message.reply('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç')



@fun_router.message(Command('dice'))
async def profile(message:Message):
    text = message.text.split() 
    
    if len(text) == 3:
        money = int(text[2])
        if money < 10:
            await message.reply('–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Å—Ç–∞–≤–∫–∞:10')
            return
        number = int(text[1])
        if number <=6:
                a = Player(message.from_user.id, message.from_user.full_name)
                if a.check("money") >= money:
                    a = Player(message.from_user.id, message.from_user.full_name)
                    dicee = await message.reply_dice()
                    if dicee.dice.value == number:
                        await asyncio.sleep(4)
                        await message.reply(f'–í–∏–ø–∞–ª–æ —á–∏—Å–ª–æ:{number}\n–í–∏ –ø–µ—Ä–µ–º–æ–≥–ª–∏\n–ó–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ:{int(money* 10)}')
                        a.plus(int(money * 10))
                    else:
                        await asyncio.sleep(4)
                        await message.reply(f'–í–∏–ø–∞–ª–æ —á–∏—Å–ª–æ:{dicee.dice.value}\n–í–∏ –ø—Ä–æ–≥—Ä–∞–ª–∏')
                else:
                    await message.reply('–í —Ç–µ–±–µ –Ω–µ–º–∞—î —Å—Ç—ñ–ª—å–∫–∏ –ì—Ä–æ—à–µ–π.\n –•–æ—á–µ—à –≤ –±–æ—Ä–≥–∏ –∑–∞–ª—ñ–∑—Ç–∏?')
        else:
            await message.reply('–¶–∏—Ñ—Ä–∞ –∫—É–±–∏–∫–∞ –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ –≤ –¥—ñ–∞–ø–æ–∑–æ–Ω—ñ 1-6')
    elif len(text) == 1:
        await message.reply("–ì—Ä–∞ –≤ –∫–æ—Å—Ç—ñ, —è–∫–∞ –∑—Ä–æ–±–∏—Ç—å —Ç–µ–±–µ –ú–Ü–õ–¨–ô–û–ù–ï–†–û–ú\n –§–æ—Ä–º–∞—Ç –≥—Ä–∏:\n /dice (—Ü–∏—Ñ—Ä–∏ –∫–æ—Å—Ç—ñ) (—Å—Ç–∞–≤–∫–∞) \n /dice 5 100 ")
    
    else:
        await message.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç")
        
@fun_router.message(F.text.upper() == '–ë–∞—Å'.upper())
async def ball(message:Message):
    data = await message.reply_dice(emoji='üèÄ')
    await asyncio.sleep(4)
    if data.dice.value == 3:
        await message.reply('–ü–æ—á—Ç–∏')
    elif data.dice.value == 5 or data.dice.value == 4:
        a = Player(message.from_user.id, message.from_user.full_name)
        num = random.randint(3400,8600)
        a.plus(num)
        await message.reply(f'–ë—ñ–Ω–≥–æ\n +{num}')
    print(data.dice.value)

@fun_router.message(F.text.upper() == '–§—É—Ç'.upper())
async def football(message:Message):
    data = await message.reply_dice(emoji='‚öΩÔ∏è')
    print( data.dice.value )
    await asyncio.sleep(4)

    if data.dice.value == 2 or data.dice.value==3 :
        await message.reply('–ü–æ—á—Ç–∏')
    elif data.dice.value == 5 or data.dice.value == 4:
        a = Player(message.from_user.id, message.from_user.full_name)
        num = random.randint(4000,7500)
        a.plus(num)
        await message.reply(f'–ë—ñ–Ω–≥–æ\n +{num}')


@fun_router.message(F.text.upper() == '–î–∞—Ä'.upper())
async def darts(message:Message):
    data = await message.reply_dice(emoji='üéØ')
    print( data.dice.value )
    await asyncio.sleep(4)

    if data.dice.value == 5:
        await message.reply('–ü–æ—á—Ç–∏')
    elif data.dice.value == 6:
        a = Player(message.from_user.id, message.from_user.full_name)
        num = random.randint(3000,9500)
        a.plus(num)
        await message.reply(f'–ù—É —Ç–∏ —Å–Ω–∞–π–ø–µ—Ä\n +{num}')



@fun_router.message(F.text.upper() == '–ë–æ—É'.upper())
async def bole(message:Message):
    data = await message.reply_dice(emoji='üé≥')
    print( data.dice.value )
    await asyncio.sleep(4)

    if data.dice.value == 5:
        await message.reply('–ü–æ—á—Ç–∏')
    elif data.dice.value == 6:
        a = Player(message.from_user.id, message.from_user.full_name)
        num = random.randint(4000,6000)
        a.plus(num)
        await message.reply(f'–ë–Ü–ù–ì–û\n +{num}')






@fun_router.message(Command('slot'))
async def slot(message:Message):
    text = message.text.split() 
    
    if len(text) == 2:
        money = int(text[1])
        if money < 10:
            await message.reply('–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Å—Ç–∞–≤–∫–∞:10')
            return
        a = Player(message.from_user.id, message.from_user.full_name)
        a.minus(money)
        if a.check('money') >= money:
            a.minus(money)
            dicee = await message.reply_dice(emoji='üé∞')
            print(dicee.dice.value)
            
            if dicee.dice.value in  [1, 22, 43]:
                await asyncio.sleep(3)
                await message.reply(f'–í–∏ –≤–∏–≥—Ä–∞–ª–∏ x5\n–ó–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ{money * 5}')
                a.plus(int(money * 5)) 
            elif dicee.dice.value in  [48,62,63, 61, 32,16]: #17
                await asyncio.sleep(3)
                await message.reply(f'–ú–∞–π–∂–µ!\n–í–∏ –≤–∏–≥—Ä–∞–ª–∏ x8\n–ó–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ{money * 8}')
                a.plus(int(money * 8))
            elif dicee.dice.value == 64:
                await asyncio.sleep(3)
                await message.reply(f'–ë–Ü–ù–ì–û–û–û–û! –í–ò –í–ò–ì–†–ê–õ–ò —Ö20\n–ó–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ{money * 20}')
                a.plus(int(money * 20))
  
                    


                        
        else:
            await message.reply('–í —Ç–µ–±–µ –Ω–µ–º–∞—î —Å—Ç—ñ–ª—å–∫–∏ –ì—Ä–æ—à–µ–π.\n –•–æ—á–µ—à –≤ –±–æ—Ä–≥–∏ –∑–∞–ª—ñ–∑—Ç–∏?')
    elif len(text) == 1:
        await message.reply("–ì—Ä–∞ –≤ –°–ª–æ—Ç–∏, —è–∫–∞ –∑—Ä–æ–±–∏—Ç—å —Ç–µ–±–µ –ú–Ü–õ–¨–Ø–†–î–ï–†–û–ú\n –§–æ—Ä–º–∞—Ç –≥—Ä–∏:\n /slot (—Å—Ç–∞–≤–∫–∞) \n /dice 10000000 ")
    
    else:
        await message.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç")



@fun_router.message(F.text.upper() == '-'.upper())
async def plus_rep(message:Message):

    if message.reply_to_message != None:
        user_reply = message.reply_to_message.from_user.id
        if user_reply != message.from_user.id:
            a = Player(message.from_user.id, message.from_user.full_name)
            a.minus_rep()
            await message.reply(f"–î—ñ—ó {message.reply_to_message.from_user.first_name} –Ω–µ —Å–ø–æ–¥–æ–±–∞–ª–∞—Å—å –Ω–∞—Ä–æ–¥—É\n–†–µ–ø—É—Ç–∞—Ü—ñ—è {message.reply_to_message.from_user.first_name}:{a.check('rep')}")
        else:
            await message.reply_animation('CgACAgQAAyEFAASNcZgUAAIcTmezH-MVxPXm3biAQ3jNfm1D6iDHAAL3AgACVJd1UzDnjQt-fxw0NgQ', caption='.....')


@fun_router.message(F.text.upper() == '+'.upper())
async def minus_rep(message:Message):
    
    if message.reply_to_message != None:
        user_reply = message.reply_to_message.from_user.id
        if user_reply != message.from_user.id:
            print(user_reply,message.from_user.id)
            print(user_reply == message.from_user.id)
            a = Player(message.from_user.id, message.from_user.full_name)
            a.plus_rep()
            await message.reply(f"{message.reply_to_message.from_user.first_name} –ø—ñ–¥—ñ–π–º–∞—î—Ç—å—Å—è –≤ –æ—á–∞—Ö –Ω–∞—Ä–æ–¥—É\n–†–µ–ø—É—Ç–∞—Ü—ñ—è {message.reply_to_message.from_user.first_name}:{a.check('rep')}")
        else:
            print(1)
            await message.reply_animation('CgACAgQAAyEFAASNcZgUAAIcUWezIAqh2tTuTzqoMjFdZ2nRgJjaAALBsgACthtkBxnPsQ9-GI8KNgQ', caption='–¢–∞–∫ –Ω–µ –º–æ–∂–Ω–æ')

@fun_router.message(F.text.upper().find('+RULES') != -1, )
async def add_rules(message:Message):
    if message.chat.type != 'private': #–ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —î –≥—Ä—É–ø–∞
        rules = message.text
        rules = rules.split()
        rules = rules[1:]
        rules_text = ' '.join(rules)
        a = Chat(int(message.chat.id))
        a.set_rule(rules_text)
        await message.reply('–£—Å–ø—ñ—à–Ω–æ')

@fun_router.message(F.text.upper() == '-RULES')
async def add_rules(message:Message):
    if message.chat.type != 'private':
        c = Chat(int(message.chat.id))
        c.del_rule()
        await message.reply("–ü—Ä–∞–≤–∏–ª–∞ –ø—Ä–∏–±—Ä–∞–Ω—ñ")

    
@fun_router.message(F.text.upper() == 'RULES')
async def rules(message:Message):
    if message.chat.type != 'private':
        c = Chat(int(message.chat.id))
        if not(c.info_rule() is None):
            await message.reply(f"–ü—Ä–∞–≤–∏–ª–∞ —Ü—å–æ–≥–æ —á–∞—Ç—É:\n{c.info_rule()}")
        else:
            await message.reply(f"–ü—Ä–∞–≤–∏–ª –Ω–µ–º–∞—î\n–©–æ–± –¥–æ–¥–∞—Ç–∏ –ø—Ä–∞–≤–∏–ª–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π +rules (–ø—Ä–∞–≤–∏–ª–∞)")


@fun_router.message(Command('admins'))

async def admins_list(message:Message):
    try:
        admins = await message.bot.get_chat_administrators(message.chat.id)
        text = '–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—è —Ü—å–æ–≥–æ —á–∞—Ç—É:\n'
        for i in admins:
            text += f"""<a href='tg://openmessage?user_id={i.user.id}'>{i.user.full_name}</a>\n"""
        await message.reply(text=text, parse_mode='HTML')
    except Exception as e:
        print(f"–∞–¥–º—ñ–Ω {e}")


@fun_router.message(Command('stats'))
async def stats(message:Message):
    a = Player(message.from_user.id, message.from_user.full_name)
    stats = a.stats_money()
    text = '–¢–æ–ø –±–∞–≥–∞—á—ñ–≤ –±–æ—Ç–∞:\n'
    if len(stats) < 10:
        for i in stats:
            text += f"""<a href='tg://openmessage?user_id={i[1]}'>{i[2]}</a> - {i[0]:,} \n"""
        await message.reply(text,parse_mode='HTML')
    else:
        stats = stats[:10]
        for i in stats:
            text += f"""<a href='tg://openmessage?user_id={i[1]}'>{i[2]}</a> - {i[0]:,} \n"""
        await message.reply(text,parse_mode='HTML')


@fun_router.message(F.text == "–∑–ø")
async def zp(message:Message):
    a = Player(message.from_user.id,message.from_user.full_name)
    if a.last_using_zp():
        money = random.randint(30000,60000)
        if await a.subscribe(message):  
            a.plus(money*2)
            await message.reply(f'–í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ {money*2}')
        else:
            a.plus(money)
            await message.reply(f'–í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ {money} \n –ü—ñ–¥–ø–∏—Å–Ω–∏–∫–∏ —Ä–µ—Å–ø—É–±–ª—ñ–∫–∏ –æ—Ç—Ä–∏–º—É—é—Ç—å —Ö2 –Ω–∞–≥–æ—Ä–æ–¥–∏')
    else:
        await message.reply('–ù–∞–≥–æ—Ä–æ–¥—É –º–æ–∂–Ω–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ä–∞–∑ –≤ –¥–µ–Ω—å')